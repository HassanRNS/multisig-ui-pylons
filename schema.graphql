type Multisig {
  pubkeyJSON: String!
  address: String!
  prefix: String!
  createdOn: Time
}

type Transaction {
  signatures: [Signature] @relation
  dataJSON: String
  txHash: String
  createBy: String!
  status: String!
  createdOn: Time
}

type MultisigByAddress {
  createFrom: String!
  address: String!
}

type Signature {
  transaction: Transaction! @relation
  bodyBytes: String!
  signature: String!
  address: String!
}

type Query {
  getMultisig(address: String!): Multisig
  getTxByMultisig(createBy: String!): [Transaction]
  getAllMultisigByAddress(createFrom: String!): [MultisigByAddress]
  getSignaturesFromAddress(address: String!): [Signature]
}

type mutation {
  deleteSignatureOfAddress(address: String!): Signature @resolver
}

enum TransactionStatus {
  PENDING
  FINISHED
}


